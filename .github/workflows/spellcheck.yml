name: Check Spelling

on:
  push:
    branches:
      - "**"
  pull_request_target:
    branches:
      - "**"
    types:
      - 'opened'
      - 'reopened'
      - 'synchronize'

jobs:
  spelling:
    name: Check Spelling
    permissions:
      contents: read
      pull-requests: read
      actions: read
      security-events: write  # Optional for Sarif report generation (see commented section)
    outputs:
      followup: ${{ steps.spelling.outputs.followup }}
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' || contains(github.event_name, 'pull_request') }}
    concurrency:
      group: spelling-${{ github.event.pull_request.number || github.ref }}
      cancel-in-progress: true
    steps:
      - name: check-spelling
        id: spelling
        uses: check-spelling/check-spelling@main
        with:
          suppress_push_for_open_pull_request: ${{ github.actor != 'dependabot[bot]' && 1 }}
          checkout: true
          check_file_names: 1
          spell_check_this: check-spelling/spell-check-this@prerelease
          post_comment: 0  # Disables automatic comment posting
          use_magic_file: 1
          report-timing: 1
          warnings: bad-regex,binary-file,deprecated-feature,large-file,limited-references,no-newline-at-eof,noisy-file,non-alpha-in-dictionary,token-is-substring,unexpected-line-ending,whitespace-in-dictionary,minified-file,unsupported-configuration,no-files-to-check
          # experimental_apply_changes_via_bot: 1  # Uncomment for automatic fix application (testing recommended)
          use_sarif: ${{ (!github.event.pull_request || (github.event.pull_request.head.repo.full_name == github.repository)) && 1 }}  # Optional for Sarif report (requires security-events: write permission)
          extra_dictionary_limit: 20
          extra_dictionaries:
            cspell: software-terms/dict/softwareTerms.txt  # Replace with path to your custom dictionary (optional)

# Optional jobs for automatic comment reporting (requires configuration)
# Comment out these sections if not desired

#      comment-push:
#        name: Report (Push)
#        runs-on: ubuntu-latest
#        needs: spelling
#        permissions:
#          contents: write
#        if: (success() || failure()) && needs.spelling.outputs.followup && github.event_name == 'push'
#        steps:
#          - name: comment
#            uses: check-spelling/check-spelling@main
#            with:
#              checkout: true
#              spell_check_this: check-spelling/spell-check-this@prerelease
#              task: ${{ needs.spelling.outputs.followup }}

#      comment-pr:
#        name: Report (PR)
#        runs-on: ubuntu-latest
#        needs: spelling
#        permissions:
#          contents: read
#          pull-requests: write
#        if: (success() || failure()) && needs.spelling.outputs.followup && contains(github.event_name, 'pull_request')
#        steps:
#          - name: comment
#            uses: check-spelling/check-spelling@main
#            with:
#              checkout: true
#              spell_check_this: check-spelling/spell-check-this@prerelease
#              task: ${{ needs.spelling.outputs.followup }}
#              experimental_apply_changes_via_bot: 1  # Uncomment for automatic fix application in PRs (testing recommended)