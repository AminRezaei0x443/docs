name: Check Spelling

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'
  pull_request_target:
    branches:
      - '**'
    types:
      - opened
      - reopened
      - synchronize

jobs:
  spelling:
    name: Check Spelling
    permissions:
      contents: read
      pull-requests: read
      actions: read
      security-events: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run spell check
        uses: check-spelling/check-spelling@main
        with:
          checkout: true
          spell_check_this: check-spelling/spell-check-this@main
          use_magic_file: 1
          report-timing: 1
          warnings: bad-regex,binary-file,deprecated-feature,large-file,limited-references,no-newline-at-eof,noisy-file,non-alpha-in-dictionary,token-is-substring,unexpected-line-ending,whitespace-in-dictionary,minified-file,unsupported-configuration,no-files-to-check
          experimental_apply_changes_via_bot: 1
          use_sarif: 1
          extra_dictionary_limit: 20
          extra_dictionaries: cspell:software-terms/dict/softwareTerms.txt

  comment-pr:
    name: Comment PR
    runs-on: ubuntu-latest
    needs: spelling
    permissions:
      contents: read
      pull-requests: write
    if: success() || failure()
    steps:
      - name: Comment on PR with results
        uses: actions/github-script@v6
        with:
          script: |
            const results = require('./path/to/spellcheck-results.json');
            const issueComment = `Spell check results:\n\n${results.issues.map(issue => `- ${issue.file}: ${issue.message}`).join('\n')}`;
            await github.rest.issues.createComment({
              ...context.repo,
              issue_number: context.issue.number,
              body: issueComment,
            });
